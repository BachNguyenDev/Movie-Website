{"ast":null,"code":"var _jsxFileName = \"D:\\\\data d\\\\REACTJS\\\\WebMovie\\\\Assignment 02 (Starter Code)\\\\src\\\\pages\\\\browse\\\\Browse.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Banner from '../Banner/Banner';\nimport NavBar from '../Navbar/NavBar';\nimport axios from '../API/Axios';\nimport requests from '../API/Request';\nimport MovieList from '../MovieList/MovieList';\nimport './Browse.css';\nconst categories = [{\n  title: 'Trending',\n  fetchUrl: requests.fetchTrending\n}, {\n  title: 'Netflix Originals',\n  fetchUrl: requests.fetchNetflixOriginals\n}, {\n  title: 'Top Rated',\n  fetchUrl: requests.fetchTopRated\n}, {\n  title: 'Action Movies',\n  fetchUrl: requests.fetchActionMovies\n}, {\n  title: 'Comedy Movies',\n  fetchUrl: requests.fetchComedyMovies\n}, {\n  title: 'Horror Movies',\n  fetchUrl: requests.fetchHorrorMovies\n}, {\n  title: 'Romance Movies',\n  fetchUrl: requests.fetchRomanceMovies\n}, {\n  title: 'Documentaries',\n  fetchUrl: requests.fetchDocumentaries\n}];\nfunction Browse() {\n  const [moviesByCategory, setMoviesByCategory] = useState({});\n  const [selected, setSelected] = useState({\n    category: null,\n    movie: null\n  });\n  useEffect(() => {\n    async function fetchAll() {\n      const results = {};\n      for (const cat of categories) {\n        try {\n          const res = await axios.get(cat.fetchUrl);\n          results[cat.title] = res.data.results || [];\n        } catch (err) {\n          results[cat.title] = [];\n        }\n      }\n      setMoviesByCategory(results);\n    }\n    fetchAll();\n  }, []);\n  useEffect(() => {\n    console.log(moviesByCategory['Netflix Originals']);\n  }, [moviesByCategory]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Banner, {\n    movies: moviesByCategory['Netflix Originals'] || [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    moviesByCategory: moviesByCategory,\n    categories: categories,\n    onMovieClick: (category, movie) => setSelected({\n      category,\n      movie\n    }),\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n}\nexport default Browse;","map":{"version":3,"names":["React","useState","useEffect","Banner","NavBar","axios","requests","MovieList","categories","title","fetchUrl","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Browse","moviesByCategory","setMoviesByCategory","selected","setSelected","category","movie","fetchAll","results","cat","res","get","data","err","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","movies","onMovieClick"],"sources":["D:/data d/REACTJS/WebMovie/Assignment 02 (Starter Code)/src/pages/browse/Browse.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Banner from '../Banner/Banner';\nimport NavBar from '../Navbar/NavBar';\nimport axios from '../API/Axios';\nimport requests from '../API/Request';\nimport MovieList from '../MovieList/MovieList';\nimport './Browse.css';\n\nconst categories = [\n  { title: 'Trending', fetchUrl: requests.fetchTrending },\n  { title: 'Netflix Originals', fetchUrl: requests.fetchNetflixOriginals },\n  { title: 'Top Rated', fetchUrl: requests.fetchTopRated },\n  { title: 'Action Movies', fetchUrl: requests.fetchActionMovies },\n  { title: 'Comedy Movies', fetchUrl: requests.fetchComedyMovies },\n  { title: 'Horror Movies', fetchUrl: requests.fetchHorrorMovies },\n  { title: 'Romance Movies', fetchUrl: requests.fetchRomanceMovies },\n  { title: 'Documentaries', fetchUrl: requests.fetchDocumentaries },\n];\n\nfunction Browse() {\n  const [moviesByCategory, setMoviesByCategory] = useState({});\n  const [selected, setSelected] = useState({ category: null, movie: null });\n\n  useEffect(() => {\n    async function fetchAll() {\n      const results = {};\n      for (const cat of categories) {\n        try {\n          const res = await axios.get(cat.fetchUrl);\n          results[cat.title] = res.data.results || [];\n        } catch (err) {\n          results[cat.title] = [];\n        }\n      }\n      setMoviesByCategory(results);\n      \n    }\n    fetchAll();\n  }, []);\n\n  useEffect(() => {\n  console.log(moviesByCategory['Netflix Originals']);\n}, [moviesByCategory]);\n\n  return (\n    <div>\n      <NavBar/>\n      <Banner movies={moviesByCategory['Netflix Originals'] || []}/>\n      <MovieList\n        moviesByCategory={moviesByCategory}\n        categories={categories}\n        onMovieClick={(category, movie) => setSelected({ category, movie })}\n        selected={selected}\n      />\n    </div>\n  );\n}\n\nexport default Browse;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}